import tkinter as tk
from tkinter import ttk
from tkinter import filedialog  # Import the file dialog module
from reportlab.lib.pagesizes import letter
from reportlab.pdfgen import canvas
import subprocess
import os
import uuid


def open_main_window():
    welcome_window.destroy()
    main_window()


def main_window():
    # Define scanning functions
    def scan_simple(ip):
        start_loading()
        try:
            result = subprocess.run(['nmap', ip], capture_output=True, text=True).stdout
        except Exception as e:
            result = f"Error: {str(e)}"
        stop_loading()
        return result

    def scan_os(ip):
        start_loading()
        try:
            result = subprocess.run(['nmap', '-O', ip], capture_output=True, text=True).stdout
        except Exception as e:
            result = f"Error: {str(e)}"
        stop_loading()
        return result

    def scan_version(ip):
        start_loading()
        try:
            result = subprocess.run(['nmap', '-sV', ip], capture_output=True, text=True).stdout
        except Exception as e:
            result = f"Error: {str(e)}"
        stop_loading()
        return result

    def scan_tcp(ip):
        start_loading()
        try:
            result = subprocess.run(['nmap', '-sT', ip], capture_output=True, text=True).stdout
        except Exception as e:
            result = f"Error: {str(e)}"
        stop_loading()
        return result

    # Generate PDF report
    def generate_pdf(result):
        filename = filedialog.asksaveasfilename(defaultextension=".pdf", filetypes=[("PDF files", "*.pdf")])
        if filename:
            c = canvas.Canvas(filename, pagesize=letter)
            c.drawString(100, 750, "Rapport Nmap")
            c.drawString(100, 730, "-" * 50)
            c.drawString(100, 700, "RÃ©sultat du scan :")
            y = 680
            for line in result.split("\n"):
                c.drawString(100, y, line)
                y -= 15
            c.save()

    # Action functions for buttons
    def action_1():
        ip_address = ip_entry.get()
        result = scan_simple(ip_address)
        result_text1.set(result)
        desc_label1.config(text="")

    def action_2():
        ip_address = ip_entry.get()
        result = scan_os(ip_address)
        result_text2.set(result)
        desc_label1.config(text="")

    def action_3():
        ip_address = ip_entry.get()
        result = scan_version(ip_address)
        result_text3.set(result)
        desc_label1.config(text="")

    def action_4():
        ip_address = ip_entry.get()
        result = scan_tcp(ip_address)
        result_text4.set(result)
        desc_label1.config(text="")

    def print_report():
        generate_pdf(result_text1.get() + "\n" + result_text2.get() + "\n" + result_text3.get() + "\n" + result_text4.get())

    def reset_window():
        ip_entry.delete(0, tk.END)
        result_text1.set("")
        result_text2.set("")
        result_text3.set("")
        result_text4.set("")
        desc_label1.config(text="Enter an IP address and scan")

    def start_loading():
        loading_label.config(text="Chargement en cours...")
        loading_progress.start()

    def stop_loading():
        loading_label.config(text="")
        loading_progress.stop()

    # Set up the main GUI window
    root = tk.Tk()
    root.title("Nmap Scanner")
    root.configure(bg='black')  # Setting background color to black
    root.attributes('-alpha', 0.9)  # Setting opacity to 90%

    frame = tk.Frame(root, bg='black')  # Internal frame with black background
    frame.pack(padx=20, pady=20)

    # Variables for storing scan results
    result_text1 = tk.StringVar()
    result_text2 = tk.StringVar()
    result_text3 = tk.StringVar()
    result_text4 = tk.StringVar()

    # GUI components
    ip_label = tk.Label(frame, text="Enter IP Address:", bg='black', fg='white')
    ip_label.grid(row=0, column=0, padx=(0, 20), pady=(0, 10))

    ip_entry = tk.Entry(frame)
    ip_entry.grid(row=0, column=1, padx=(0, 20), pady=(0, 10))

    button1 = tk.Button(frame, text="Scan Simple", command=action_1, width=15, height=2)
    button1.grid(row=1, column=0, padx=(40, 40), pady=(0, 10))

    button2 = tk.Button(frame, text="Scan OS", command=action_2, width=15, height=2)
    button2.grid(row=1, column=1, padx=(40, 40), pady=(0, 10))

    button3 = tk.Button(frame, text="Scan Version", command=action_3, width=15, height=2)
    button3.grid(row=1, column=2, padx=(40, 40), pady=(0, 10))

    button4 = tk.Button(frame, text="Scan TCP", command=action_4, width=15, height=2)
    button4.grid(row=1, column=3, padx=(40, 40), pady=(0, 10))

    result_label1 = tk.Label(frame, textvariable=result_text1, fg="blue", justify="left", anchor="w", wraplength=400, bg='black')
    result_label1.grid(row=2, column=0, padx=(80, 80), pady=(0, 10), columnspan=4, sticky="w")

    result_label2 = tk.Label(frame, textvariable=result_text2, fg="blue", justify="left", anchor="w", wraplength=400, bg='black')
    result_label2.grid(row=3, column=0, padx=(80, 80), pady=(0, 10), columnspan=4, sticky="w")

    result_label3 = tk.Label(frame, textvariable=result_text3, fg="blue", justify="left", anchor="w", wraplength=400, bg='black')
    result_label3.grid(row=4, column=0, padx=(80, 80), pady=(0, 10), columnspan=4, sticky="w")

    result_label4 = tk.Label(frame, textvariable=result_text4, fg="blue", justify="left", anchor="w", wraplength=400, bg='black')
    result_label4.grid(row=5, column=0, padx=(80, 80), pady=(0, 10), columnspan=4, sticky="w")

    desc_label1 = tk.Label(frame, text="Enter an IP address and scan", bg='black', fg='white')
    desc_label1.grid(row=6, column=0, padx=(0, 20), pady=(0, 10), columnspan=4)

    reset_button = tk.Button(frame, text="Reset", command=reset_window, width=15, height=2)
    reset_button.grid(row=7, column=0, columnspan=4, pady=(10, 0))

    print_button = tk.Button(frame, text="Print Report", command=print_report, width=15, height=2)
    print_button.grid(row=8, column=0, columnspan=4, pady=(10, 0))

    # Loading bar and label
    loading_progress = ttk.Progressbar(frame, mode='indeterminate')
    loading_label = tk.Label(frame, text="", bg='black', fg='white')
    loading_label.grid(row=9, column=0, columnspan=4, pady=(10, 0))

    root.mainloop()


welcome_window = tk.Tk()
welcome_window.title("Welcome")
welcome_window.geometry("300x200")
welcome_window.configure(bg='black')  # Setting background color to black

welcome_label = tk.Label(welcome_window, text="Welcome to Nmap Scanner", font=("Helvetica", 16), bg='black', fg='white')
welcome_label.pack(pady=20)

open_button = tk.Button(welcome_window, text="Open Scanner", command=open_main_window, width=15, height=2)
open_button.pack(pady=10)

welcome_window.mainloop()

import subprocess
import os
import tkinter as tk
from tkinter import messagebox, scrolledtext, filedialog
from reportlab.lib.pagesizes import letter
from reportlab.pdfgen import canvas

def execute_hydra():
    # Chemin du dossier cible
    dossier_cible = r"C:\thc-hydra-windows-master"

    # Vérifiez si le dossier existe
    if not os.path.exists(dossier_cible):
        messagebox.showerror("Erreur", f"Le dossier {dossier_cible} n'existe pas.")
        return

    # Récupérer les entrées utilisateur
    nom_utilisateur = entry_nom_utilisateur.get()
    adresse_ip = entry_adresse_ip.get()

    if not nom_utilisateur or not adresse_ip:
        messagebox.showerror("Erreur", "Veuillez entrer un nom d'utilisateur et une adresse IP.")
        return

    # Construire la commande hydra
    commande_hydra = f'hydra -l {nom_utilisateur} -P mdp.txt ssh://{adresse_ip}'

    # Commande pour se déplacer dans le dossier cible et exécuter la commande hydra
    commande_complete = f'cd /D {dossier_cible} && {commande_hydra}'

    # Exécution de la commande
    process = subprocess.Popen(commande_complete, shell=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE, text=True)
    
    # Lire la sortie et l'afficher dans la zone de texte
    output, error = process.communicate()
    text_output.delete(1.0, tk.END)  # Clear previous content
    if output:
        text_output.insert(tk.END, output)
    if error:
        text_output.insert(tk.END, error)

def show_login_password():
    # Extraire le texte de la zone de texte
    output_text = text_output.get(1.0, tk.END)
    # Filtrer les lignes contenant "login" et "mot de passe"
    filtered_lines = [line for line in output_text.splitlines() if "login" in line or "mot de passe" in line]

    # Créer une nouvelle fenêtre pour afficher les résultats filtrés
    filtered_window = tk.Toplevel(root)
    filtered_window.title("Login et Mot de Passe")

    # Zone de texte dans la nouvelle fenêtre pour afficher les résultats
    filtered_text = scrolledtext.ScrolledText(filtered_window, width=80, height=20)
    filtered_text.pack(pady=10)
    for line in filtered_lines:
        filtered_text.insert(tk.END, line + "\n")

def generate_pdf():
    # Extraire le texte de la zone de texte
    output_text = text_output.get(1.0, tk.END)
    # Filtrer les lignes contenant "login" et "mot de passe"
    filtered_lines = [line for line in output_text.splitlines() if "login" in line or "mot de passe" in line]

    # Demander à l'utilisateur de choisir l'emplacement pour enregistrer le PDF
    file_path = filedialog.asksaveasfilename(defaultextension=".pdf", filetypes=[("PDF files", "*.pdf"), ("All files", "*.*")])
    if not file_path:
        return  # L'utilisateur a annulé l'enregistrement

    # Créer le PDF
    c = canvas.Canvas(file_path, pagesize=letter)
    width, height = letter
    c.drawString(100, height - 100, "Login et Mot de Passe")
    text = c.beginText(100, height - 120)
    text.setFont("Helvetica", 12)
    for line in filtered_lines:
        text.textLine(line)
    c.drawText(text)
    c.save()

    messagebox.showinfo("Succès", f"PDF enregistré à {file_path}")

# Création de la fenêtre principale
root = tk.Tk()
root.title("Hydra GUI")

# Créer et placer les widgets
label_nom_utilisateur = tk.Label(root, text="Nom d'utilisateur")
label_nom_utilisateur.pack(pady=5)
entry_nom_utilisateur = tk.Entry(root)
entry_nom_utilisateur.pack(pady=5)

label_adresse_ip = tk.Label(root, text="Adresse IP cible")
label_adresse_ip.pack(pady=5)
entry_adresse_ip = tk.Entry(root)
entry_adresse_ip.pack(pady=5)

button_execute = tk.Button(root, text="Exécuter Hydra", command=execute_hydra)
button_execute.pack(pady=20)

# Zone de texte pour afficher la sortie
text_output = scrolledtext.ScrolledText(root, width=80, height=20)
text_output.pack(pady=10)

# Bouton pour afficher les lignes "login" et "mot de passe"
button_show_login_password = tk.Button(root, text="Afficher Login et Mot de Passe", command=show_login_password)
button_show_login_password.pack(pady=10)

# Bouton pour générer le PDF
button_generate_pdf = tk.Button(root, text="Générer PDF", command=generate_pdf)
button_generate_pdf.pack(pady=10)

# Lancement de la boucle principale de l'interface graphique
root.mainloop()
